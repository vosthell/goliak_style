/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmProductos.java
 *
 * Created on 22-oct-2011, 21:44:57
 */
package producto;

import clases.clsAuditoria;
import clases.clsComboBox;
import clases.clsGrupo;
import clases.clsImpuestos;
import clases.clsPrecio;
import clases.clsProducto;
import clases.clsUtils;
import com.jidesoft.hints.ListDataIntelliHints;
import com.jidesoft.swing.SelectAllUtils;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pos.frmListProductos;

/**
 *
 * @author Kaiser
 */
public class frmProductosMod extends javax.swing.JInternalFrame {
    clsUtils objUtils = new clsUtils();
    clsProducto objProducto = new clsProducto();
    clsPrecio objPrecio = new clsPrecio();
    clsAuditoria objAuditoria = new clsAuditoria();
    clsImpuestos objImpuestos = new clsImpuestos();
    clsGrupo objGrupo = new clsGrupo();
    
    MiModelo dtmData = new MiModelo();
    
    boolean exito;
    int codigoProducto =0;
    double porcentajeIva = objImpuestos.obtenerPorcentajeIVA();
    /** Creates new form frmProductos */
    public frmProductosMod() {
        initComponents();
        //COLOCAR EL IMPUESTO IVA
        txtIva.setText(""+objImpuestos.obtenerPorcentajeIVA());
        
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date fechaActual = new Date();
        txtFechaCaducidad.setDate(fechaActual);
                
        //CARGAR AUTOCOMPLETAR
        List<String> dataCodigo = objProducto.consultarCodigos();         
        SelectAllUtils.install(txtCodigo);
        ListDataIntelliHints intellihints = new ListDataIntelliHints(txtCodigo, dataCodigo);        
        intellihints.setCaseSensitive(false);
        
        dtmData.addColumn("NÂº");
        dtmData.addColumn("Costo ($)");
        dtmData.addColumn("Utilidad (%)");
        dtmData.addColumn("Precio ($)");
        
        clsComboBox oItem = new clsComboBox("A", "ACTIVO");
        cmbEstado.addItem(oItem); 
        oItem = new clsComboBox("I", "INACTIVO");
        cmbEstado.addItem(oItem); 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCantidadInicial = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        cmbGrupo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox();
        btnGuardarCambios = new javax.swing.JButton();
        jideTabbedPane1 = new com.jidesoft.swing.JideTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCostoPrecio = new javax.swing.JTextField();
        txtUtilidadPorcentaje = new javax.swing.JTextField();
        txtPvp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDataPrecios = new javax.swing.JTable();
        btnAgregarPrecio = new javax.swing.JButton();
        rbtnIVA0 = new javax.swing.JRadioButton();
        rbtnIVA = new javax.swing.JRadioButton();
        txtIva = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtUtilidad = new javax.swing.JTextField();
        txtBase = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtIvaActual = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtPorcentajeVendedor = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtDineroVendedor = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        chkCantidadMinima = new javax.swing.JCheckBox();
        txtCantidadMinima = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rbtnSinExistencia = new javax.swing.JRadioButton();
        rbtnConExistencia = new javax.swing.JRadioButton();
        chkPerecible = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        txtFechaCaducidad = new com.toedter.calendar.JDateChooser();
        lblFechaCaducidad = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDescuento = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(stinventario.STInventarioApp.class).getContext().getResourceMap(frmProductosMod.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        txtCodigo.setBackground(resourceMap.getColor("txtCodigo.background")); // NOI18N
        txtCodigo.setText(resourceMap.getString("txtCodigo.text")); // NOI18N
        txtCodigo.setName("txtCodigo"); // NOI18N
        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtDescripcion.setText(resourceMap.getString("txtDescripcion.text")); // NOI18N
        txtDescripcion.setName("txtDescripcion"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        txtCosto.setBackground(resourceMap.getColor("txtCosto.background")); // NOI18N
        txtCosto.setText(resourceMap.getString("txtCosto.text")); // NOI18N
        txtCosto.setName("txtCosto"); // NOI18N
        txtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCostoKeyReleased(evt);
            }
        });

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setEnabled(false);
        jLabel9.setName("jLabel9"); // NOI18N

        txtCantidadInicial.setText(resourceMap.getString("txtCantidadInicial.text")); // NOI18N
        txtCantidadInicial.setEnabled(false);
        txtCantidadInicial.setName("txtCantidadInicial"); // NOI18N
        txtCantidadInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadInicialKeyReleased(evt);
            }
        });

        btnBuscar.setIcon(resourceMap.getIcon("btnBuscar.icon")); // NOI18N
        btnBuscar.setText(resourceMap.getString("btnBuscar.text")); // NOI18N
        btnBuscar.setName("btnBuscar"); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        cmbGrupo.setName("cmbGrupo"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        cmbEstado.setName("cmbEstado"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCantidadInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar))
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel19)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbGrupo, 0, 155, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(jButton1)
                    .addComponent(jLabel18)
                    .addComponent(cmbGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)
                        .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCantidadInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        btnGuardarCambios.setIcon(resourceMap.getIcon("btnGuardarCambios.icon")); // NOI18N
        btnGuardarCambios.setText(resourceMap.getString("btnGuardarCambios.text")); // NOI18N
        btnGuardarCambios.setName("btnGuardarCambios"); // NOI18N
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });

        jideTabbedPane1.setName("jideTabbedPane1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        txtCostoPrecio.setEditable(false);
        txtCostoPrecio.setText(resourceMap.getString("txtCostoPrecio.text")); // NOI18N
        txtCostoPrecio.setName("txtCostoPrecio"); // NOI18N

        txtUtilidadPorcentaje.setText(resourceMap.getString("txtUtilidadPorcentaje.text")); // NOI18N
        txtUtilidadPorcentaje.setName("txtUtilidadPorcentaje"); // NOI18N
        txtUtilidadPorcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUtilidadPorcentajeKeyReleased(evt);
            }
        });

        txtPvp.setText(resourceMap.getString("txtPvp.text")); // NOI18N
        txtPvp.setName("txtPvp"); // NOI18N
        txtPvp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPvpKeyReleased(evt);
            }
        });

        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setName("jLabel8"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblDataPrecios.setModel(dtmData);
        tblDataPrecios.setName("tblDataPrecios"); // NOI18N
        tblDataPrecios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataPreciosMouseClicked(evt);
            }
        });
        tblDataPrecios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblDataPreciosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblDataPrecios);

        btnAgregarPrecio.setIcon(resourceMap.getIcon("btnAgregarPrecio.icon")); // NOI18N
        btnAgregarPrecio.setText(resourceMap.getString("btnAgregarPrecio.text")); // NOI18N
        btnAgregarPrecio.setName("btnAgregarPrecio"); // NOI18N
        btnAgregarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPrecioActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnIVA0);
        rbtnIVA0.setText(resourceMap.getString("rbtnIVA0.text")); // NOI18N
        rbtnIVA0.setName("rbtnIVA0"); // NOI18N
        rbtnIVA0.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnIVA0ItemStateChanged(evt);
            }
        });

        buttonGroup2.add(rbtnIVA);
        rbtnIVA.setSelected(true);
        rbtnIVA.setText(resourceMap.getString("rbtnIVA.text")); // NOI18N
        rbtnIVA.setName("rbtnIVA"); // NOI18N
        rbtnIVA.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnIVAItemStateChanged(evt);
            }
        });

        txtIva.setEditable(false);
        txtIva.setName("txtIva"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        txtUtilidad.setText(resourceMap.getString("txtUtilidad.text")); // NOI18N
        txtUtilidad.setName("txtUtilidad"); // NOI18N
        txtUtilidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUtilidadKeyReleased(evt);
            }
        });

        txtBase.setText(resourceMap.getString("txtBase.text")); // NOI18N
        txtBase.setName("txtBase"); // NOI18N
        txtBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBaseKeyReleased(evt);
            }
        });

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        txtIvaActual.setText(resourceMap.getString("txtIvaActual.text")); // NOI18N
        txtIvaActual.setEnabled(false);
        txtIvaActual.setName("txtIvaActual"); // NOI18N

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        txtPorcentajeVendedor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPorcentajeVendedor.setText(resourceMap.getString("txtPorcentajeVendedor.text")); // NOI18N
        txtPorcentajeVendedor.setName("txtPorcentajeVendedor"); // NOI18N
        txtPorcentajeVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPorcentajeVendedorKeyReleased(evt);
            }
        });

        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N

        txtDineroVendedor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDineroVendedor.setText(resourceMap.getString("txtDineroVendedor.text")); // NOI18N
        txtDineroVendedor.setEnabled(false);
        txtDineroVendedor.setName("txtDineroVendedor"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(14, 14, 14))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rbtnIVA0)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnIVA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCostoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUtilidadPorcentaje)
                                    .addComponent(jLabel5))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUtilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(txtBase, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(txtIvaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtPvp, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAgregarPrecio))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(txtPorcentajeVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDineroVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnIVA0)
                            .addComponent(rbtnIVA)
                            .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtUtilidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCostoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUtilidadPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel15))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(btnAgregarPrecio)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(jLabel6)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtIvaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtPvp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                .addGap(9, 9, 9))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel8)))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtPorcentajeVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(txtDineroVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jideTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        chkCantidadMinima.setText(resourceMap.getString("chkCantidadMinima.text")); // NOI18N
        chkCantidadMinima.setName("chkCantidadMinima"); // NOI18N
        chkCantidadMinima.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkCantidadMinimaItemStateChanged(evt);
            }
        });

        txtCantidadMinima.setEditable(false);
        txtCantidadMinima.setText(resourceMap.getString("txtCantidadMinima.text")); // NOI18N
        txtCantidadMinima.setName("txtCantidadMinima"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        buttonGroup1.add(rbtnSinExistencia);
        rbtnSinExistencia.setText(resourceMap.getString("rbtnSinExistencia.text")); // NOI18N
        rbtnSinExistencia.setName("rbtnSinExistencia"); // NOI18N

        buttonGroup1.add(rbtnConExistencia);
        rbtnConExistencia.setSelected(true);
        rbtnConExistencia.setText(resourceMap.getString("rbtnConExistencia.text")); // NOI18N
        rbtnConExistencia.setName("rbtnConExistencia"); // NOI18N

        chkPerecible.setText(resourceMap.getString("chkPerecible.text")); // NOI18N
        chkPerecible.setName("chkPerecible"); // NOI18N
        chkPerecible.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkPerecibleItemStateChanged(evt);
            }
        });
        chkPerecible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPerecibleActionPerformed(evt);
            }
        });

        jLabel13.setFont(resourceMap.getFont("jLabel13.font")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        txtFechaCaducidad.setDateFormatString(resourceMap.getString("txtFechaCaducidad.dateFormatString")); // NOI18N
        txtFechaCaducidad.setEnabled(false);
        txtFechaCaducidad.setName("txtFechaCaducidad"); // NOI18N

        lblFechaCaducidad.setText(resourceMap.getString("lblFechaCaducidad.text")); // NOI18N
        lblFechaCaducidad.setEnabled(false);
        lblFechaCaducidad.setName("lblFechaCaducidad"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        txtDescuento.setName("txtDescuento"); // NOI18N
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyReleased(evt);
            }
        });

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(chkPerecible)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(lblFechaCaducidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnSinExistencia)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnConExistencia))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(chkCantidadMinima)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidadMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(300, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidadMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCantidadMinima))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(rbtnSinExistencia))
                    .addComponent(rbtnConExistencia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblFechaCaducidad)
                        .addComponent(txtFechaCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkPerecible)
                        .addComponent(jLabel13)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jideTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jideTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardarCambios)
                .addGap(326, 326, 326))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jideTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardarCambios)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void txtCostoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoKeyReleased
    String x = txtCosto.getText();
    if(!objUtils.isDouble(x)){
        txtCosto.setText("");
    }
    txtCostoPrecio.setText(txtCosto.getText());
   
}//GEN-LAST:event_txtCostoKeyReleased

    public class MiModelo extends DefaultTableModel
    {
            @Override
       public boolean isCellEditable (int row, int column)
       {
           // AquÃ­ devolvemos true o false segÃºn queramos que una celda
           // identificada por fila,columna (row,column), sea o no editable
          /* if (column == 3)
              return true;*/
           
           return false;
       }
    } 
    
    
private void txtUtilidadPorcentajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUtilidadPorcentajeKeyReleased
    String x = txtUtilidadPorcentaje.getText();
    if(!objUtils.isDouble(x)){
        txtUtilidadPorcentaje.setText("");
    }
    Double utilidad = Double.parseDouble(txtCosto.getText())*Double.parseDouble(txtUtilidadPorcentaje.getText())/100;
    txtUtilidad.setText("" + objUtils.redondear(utilidad));
    Double base = Double.parseDouble(txtCosto.getText())+utilidad;
    txtBase.setText("" + objUtils.redondear(base));
    Double ivaBase = base*(this.porcentajeIva/100);
    txtIvaActual.setText("" + objUtils.redondear(ivaBase));
    Double precio =base+ivaBase;
    txtPvp.setText("" + objUtils.redondear(precio));
}//GEN-LAST:event_txtUtilidadPorcentajeKeyReleased

private void txtPvpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPvpKeyReleased
   Double costo = Double.parseDouble(txtCosto.getText());
   Double ivaBase = Double.parseDouble(txtPvp.getText())/(1+(porcentajeIva/100));
   txtBase.setText(""+objUtils.redondear(ivaBase));
   Double iva = Double.parseDouble(txtPvp.getText())-ivaBase;
   txtIvaActual.setText(""+objUtils.redondear(iva));
   Double utilidad = ivaBase-costo;
   txtUtilidad.setText(""+objUtils.redondear(utilidad));   
   Double porcentajeUtilidad = 0.00;
   if (costo>0)
       porcentajeUtilidad = (utilidad*100)/costo;
   else
        porcentajeUtilidad = (utilidad*100);
   txtUtilidadPorcentaje.setText(""+objUtils.redondear(porcentajeUtilidad));
}//GEN-LAST:event_txtPvpKeyReleased

    private void chkPerecibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPerecibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPerecibleActionPerformed

    private void chkPerecibleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkPerecibleItemStateChanged
        if(this.chkPerecible.isSelected())        
        {    
            this.lblFechaCaducidad.setEnabled(true);  
            this.txtFechaCaducidad.setEnabled(true);
        }
        else
        {
            this.lblFechaCaducidad.setEnabled(false);  
            this.txtFechaCaducidad.setEnabled(false);
        }
    }//GEN-LAST:event_chkPerecibleItemStateChanged

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        clsComboBox objEstadoSelect = (clsComboBox)cmbEstado.getSelectedItem();
        if(txtCodigo.getText().equals("")||txtDescripcion.getText().equals("")||txtCosto.getText().equals("")||txtCantidadMinima.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Ingrese correctamente la informaciÃ³n", "AtenciÃ³n!", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            clsComboBox objGrupoSelect = (clsComboBox)cmbGrupo.getSelectedItem();
            char cantidadMinima;
            String sinExistencia="";
            char perecible;
            //AVISAR CANTIDAD MINIMA
            if(this.chkCantidadMinima.isSelected())
            {
                cantidadMinima = 'S';               
            }
            else
            {
                cantidadMinima = 'N';
            } 
            //FACTURAR SIN EXISTENCIA
            if(this.rbtnSinExistencia.isSelected())
                    sinExistencia = "S";
            else if(this.rbtnConExistencia.isSelected())               
                    sinExistencia = "N";  
            
            if(this.chkPerecible.isSelected())
            {
                perecible = 'S';               
            }
            else
            {
                perecible = 'N';
            } 
            DateFormat df2 = new SimpleDateFormat("yyyy-MM-dd");
            Date date1= txtFechaCaducidad.getDate();
            String fechaCaducidad = df2.format(date1);
            exito = objProducto.modificarDataProducto(codigoProducto,
                    txtCodigo.getText(),
                    txtDescripcion.getText().toUpperCase().toString(),
                    txtCantidadInicial.getText().toString(),
                    txtCosto.getText().toString(),
                    cantidadMinima, txtCantidadMinima.getText().toString(),
                    sinExistencia,
                    perecible, fechaCaducidad,
                    txtDescuento.getText().toString(),
                    objGrupoSelect.getCodigo(),
                    objEstadoSelect.getCodigo(),
                    txtPorcentajeVendedor.getText());
            if(exito)
            {
                //ELIMINAR PRECIOS ACTUALES
                objPrecio.eliminarPreciosActuales(codigoProducto);
                
                //GUARDAR LOS PRECIOS
                try
                {
                    boolean exito;        
                    int maxData = dtmData.getRowCount();
                    for(int i=0; i<maxData; i++)
                    {
                        exito = objPrecio.insertarNuevoRegistroPrecio(this.codigoProducto, dtmData.getValueAt(i, 1).toString(),dtmData.getValueAt(i, 2).toString(), dtmData.getValueAt(i, 3).toString(), ""+(i+1));
                    }                    
                }
                catch(Exception e)
                {
                   System.out.println(e);
                }     
                /*****************IMPUESTOS***********************/
                //ELIMINO LOS ACTUALES
                objImpuestos.eliminarImpuestosActuales(codigoProducto);
                //GUARDO LOS NUEVOS, SI ES QUE HAY
                if(this.rbtnIVA.isSelected())
                    objImpuestos.updateProductoImpuesto(codigoProducto, "1");   
                //objProducto.insertarVerificado(codigoProducto);
                JOptionPane.showMessageDialog(this, "Datos almacenados con Ã©xito", "AtenciÃ³n!", JOptionPane.INFORMATION_MESSAGE);
                objAuditoria.insertarAuditoria("frmProductosMod", "ACTUALIZACION DEL PRODUCTO: " + txtDescripcion.getText().toUpperCase().toString(), "3");
                dispose();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Error al guardar informaciÃ³n", "AtenciÃ³n!", JOptionPane.WARNING_MESSAGE);
                objAuditoria.insertarAuditoria("frmProductosMod", "INTENTÃ MODIFICAR EL PRODUCTO: "+txtDescripcion.getText().toUpperCase().toString(), "3");
                
            }
        }
    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoFocusLost
      
    }//GEN-LAST:event_txtCodigoFocusLost

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
      
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void chkCantidadMinimaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkCantidadMinimaItemStateChanged
        if(this.chkCantidadMinima.isSelected())        
        {    
            this.txtCantidadMinima.setEditable(true);
        }
        else
        {
            this.txtCantidadMinima.setEditable(false);
        }
    }//GEN-LAST:event_chkCantidadMinimaItemStateChanged

    private void txtCantidadInicialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadInicialKeyReleased
        String x = txtCantidadInicial.getText();
        if(!objUtils.isDouble(x)){
            txtCantidadInicial.setText("");
        }        
    }//GEN-LAST:event_txtCantidadInicialKeyReleased

private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
    String codProducto = txtCodigo.getText().toString();
     
    ArrayList<clsProducto> dataProducto = objProducto.consultarDataProductoPorCodigoTodosAI(codProducto); 
    if(dataProducto.isEmpty())
    {
        JOptionPane.showMessageDialog(this, "No existe Producto", "AtenciÃ³n!", JOptionPane.WARNING_MESSAGE);
    }
    else
    {
        codigoProducto = Integer.parseInt(dataProducto.get(0).getIdItems());
    
         //CONSULTAR IMPUESTOS
         boolean iva = objImpuestos.comprobarImpuesto(codigoProducto, "1");
         if(iva)
         {    
             rbtnIVA.setSelected(true);
             rbtnIVA0.setSelected(false);
         }
         else
         {
             rbtnIVA.setSelected(false);
            rbtnIVA0.setSelected(true);
         }
         txtDescripcion.setText(dataProducto.get(0).getDesItem());
         txtCosto.setText(dataProducto.get(0).getCosto().toString());
         txtCantidadInicial.setText(dataProducto.get(0).getCantStock().toString());
         txtDescuento.setText(dataProducto.get(0).getDescuento().toString());
         txtPorcentajeVendedor.setText(dataProducto.get(0).getPorcentajeVendedor().toString());
         if(dataProducto.get(0).getControlPerecible().equals("S"))
         {
             chkPerecible.setSelected(true);
             String fecha = dataProducto.get(0).getFechaCaducidad();      
             java.text.SimpleDateFormat formato = new java.text.SimpleDateFormat("yyyy-MM-dd");
             try {
                Date fechaActual = formato.parse(fecha);
                txtFechaCaducidad.setDate(fechaActual);
             }catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Revisar datos " + ex );
             }         
         }    
         if(dataProducto.get(0).getControlExistencia().equals("S"))
         {
            rbtnSinExistencia.setSelected(true);         
         }
         if(dataProducto.get(0).getControlMinimo().equals("S"))
         {
             this.chkCantidadMinima.setSelected(true);
             txtCantidadMinima.setText(dataProducto.get(0).getCantidadMinima());

         }
         txtCostoPrecio.setText(txtCosto.getText().toString());
         //CARGAR GRUPO
            cmbGrupo.removeAllItems();
            ArrayList<clsComboBox> dataGrupo = objGrupo.consultarGrupos();        
            for(int i=0;i<dataGrupo.size();i=i+1)
            {
                clsComboBox oItem = new clsComboBox(dataGrupo.get(i).getCodigo(), dataGrupo.get(i).getDescripcion());
                cmbGrupo.addItem(oItem);
                if(Integer.parseInt(dataGrupo.get(i).getCodigo())==(dataProducto.get(0).getIdGrupoProducto()))
                {    
                    cmbGrupo.setSelectedItem(oItem);
                }    
            }

         //CONSULTAR LOS PRECIOS
         objUtils.vaciarTabla(dtmData);
         ArrayList<clsPrecio> dataPrecio = objPrecio.consultarDataPrecios(codigoProducto);
         for(int i=0;i<dataPrecio.size();i=i+1)
         {
            Double costo = objUtils.redondear(Double.parseDouble(""+dataPrecio.get(i).getCosto()));
            Double utilidad = objUtils.redondear(Double.parseDouble(""+dataPrecio.get(i).getUtilidad()));
            Double precio = objUtils.redondear(Double.parseDouble(""+dataPrecio.get(i).getPrecio()));
            Object[] nuevaFila = {"0", costo , utilidad, precio};               
            dtmData.addRow(nuevaFila); 
        }
        objUtils.enumerarFilas(dtmData, 0);
         
        //CARGAR ESTADO
        cmbEstado.removeAllItems();
        clsComboBox oItem = new clsComboBox("A", "ACTIVO");
        cmbEstado.addItem(oItem); 
        if(dataProducto.get(0).getEstado().equals("A"))
            cmbEstado.setSelectedItem(oItem);
        oItem = new clsComboBox("I", "INACTIVO");
        cmbEstado.addItem(oItem); 
        if(dataProducto.get(0).getEstado().equals("I"))
            cmbEstado.setSelectedItem(oItem);      
    }
}//GEN-LAST:event_btnBuscarActionPerformed

private void btnAgregarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPrecioActionPerformed
    Object[] nuevaFila = {"", txtCostoPrecio.getText().toString(), txtUtilidadPorcentaje.getText().toString(), txtPvp.getText().toString()};
    dtmData.addRow(nuevaFila);
    objUtils.enumerarFilas(dtmData, 0);
}//GEN-LAST:event_btnAgregarPrecioActionPerformed

private void tblDataPreciosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDataPreciosKeyTyped
    DefaultTableModel dtm = (DefaultTableModel) tblDataPrecios.getModel();  
    if(evt.getKeyChar() == KeyEvent.VK_DELETE){
        dtm.removeRow(tblDataPrecios.getSelectedRow()); 
    }    
    objUtils.enumerarFilas(dtm, 0);
}//GEN-LAST:event_tblDataPreciosKeyTyped

private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
            manager.focusNextComponent();  
       }// TODO add your handling code here:
}//GEN-LAST:event_txtCodigoKeyTyped

private void txtDescuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyReleased
    String x = txtDescuento.getText();
    if(!objUtils.isDouble(x)){
        txtDescuento.setText("");
    }  
}//GEN-LAST:event_txtDescuentoKeyReleased

private void txtUtilidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUtilidadKeyReleased
    String x = txtUtilidad.getText();
    if(!objUtils.isDouble(x)){
        txtUtilidad.setText("");
    }
     Double porcentajeUtilidad = 0.00;
    if (Double.parseDouble(txtCosto.getText())>0)
       porcentajeUtilidad = (Double.parseDouble(txtUtilidad.getText())*100)/Double.parseDouble(txtCosto.getText());
    else
        porcentajeUtilidad = (Double.parseDouble(txtUtilidad.getText())*100);
    txtUtilidadPorcentaje.setText("" + objUtils.redondear(porcentajeUtilidad));
    Double base = Double.parseDouble(txtCosto.getText())+Double.parseDouble(txtUtilidad.getText());
    txtBase.setText("" + objUtils.redondear(base));
    Double ivaBase = base*(this.porcentajeIva/100);
    txtIvaActual.setText(""+objUtils.redondear(ivaBase));
    Double precio =base+ivaBase;
    txtPvp.setText(""+objUtils.redondear(precio));
}//GEN-LAST:event_txtUtilidadKeyReleased

private void txtBaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBaseKeyReleased
    String x = txtBase.getText();
    if(!objUtils.isDouble(x)){
        txtBase.setText("");
    }
    Double porcentaje = ((Double.parseDouble(txtBase.getText())-Double.parseDouble(txtCosto.getText()))/Double.parseDouble(txtCosto.getText()))*100;
    txtUtilidadPorcentaje.setText(""+objUtils.redondear(porcentaje));
    Double utilidad = Double.parseDouble(txtCosto.getText())*Double.parseDouble(txtUtilidadPorcentaje.getText())/100;
    txtUtilidad.setText("" +objUtils.redondear(utilidad));
    Double ivaBase = Double.parseDouble(txtBase.getText())*(this.porcentajeIva/100);
    txtIvaActual.setText(""+objUtils.redondear(ivaBase));
    Double precio =Double.parseDouble(txtBase.getText())+ivaBase;
    txtPvp.setText(""+objUtils.redondear(precio));
}//GEN-LAST:event_txtBaseKeyReleased

private void rbtnIVA0ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnIVA0ItemStateChanged
    if(this.rbtnIVA0.isSelected())
        porcentajeIva = 0;
    else if(this.rbtnIVA.isSelected())               
        porcentajeIva = objImpuestos.obtenerPorcentajeIVA();  
    txtUtilidadPorcentaje.setText("");
    txtUtilidad.setText("");
    txtBase.setText("");
    txtIvaActual.setText("");
    txtPvp.setText("");
}//GEN-LAST:event_rbtnIVA0ItemStateChanged

private void rbtnIVAItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnIVAItemStateChanged
    if(this.rbtnIVA0.isSelected())
        porcentajeIva = 0;
    else if(this.rbtnIVA.isSelected())               
        porcentajeIva = objImpuestos.obtenerPorcentajeIVA();
    txtUtilidadPorcentaje.setText("");
    txtUtilidad.setText("");
    txtBase.setText("");
    txtIvaActual.setText("");
    txtPvp.setText("");
}//GEN-LAST:event_rbtnIVAItemStateChanged

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    frmListProductos ventana = new frmListProductos(null, true, "5");        
    ventana.setLocationRelativeTo(null);
    ventana.setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed

    private void txtPorcentajeVendedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeVendedorKeyReleased
        String x = txtPorcentajeVendedor.getText();
        if(!objUtils.isDouble(x)){
            txtPorcentajeVendedor.setText("");
        }
        Double valor = Double.parseDouble(dtmData.getValueAt(0, 3).toString());
        Double porcentaje = Double.parseDouble(txtPorcentajeVendedor.getText().toString());  
        txtDineroVendedor.setText("" + (valor * porcentaje /100)); 
    }//GEN-LAST:event_txtPorcentajeVendedorKeyReleased

    private void tblDataPreciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataPreciosMouseClicked
        int fila = tblDataPrecios.rowAtPoint(evt.getPoint());
        //int columna = tblData.columnAtPoint(evt.getPoint());
        double costo = Double.parseDouble(tblDataPrecios.getValueAt(fila,1).toString());
        double utilidad_porcentaje = Double.parseDouble(tblDataPrecios.getValueAt(fila,2).toString());
        double utilidad_plata = costo * utilidad_porcentaje / 100;
        
        double porcentaje_vendedor = Double.parseDouble(txtPorcentajeVendedor.getText());
        
        double plata_vendedor = utilidad_plata * porcentaje_vendedor / 100;
        txtDineroVendedor.setText(""+objUtils.redondear(plata_vendedor));
    }//GEN-LAST:event_tblDataPreciosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarPrecio;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkCantidadMinima;
    private javax.swing.JCheckBox chkPerecible;
    private javax.swing.JComboBox cmbEstado;
    private javax.swing.JComboBox cmbGrupo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.jidesoft.swing.JideTabbedPane jideTabbedPane1;
    private javax.swing.JLabel lblFechaCaducidad;
    private javax.swing.JRadioButton rbtnConExistencia;
    private javax.swing.JRadioButton rbtnIVA;
    private javax.swing.JRadioButton rbtnIVA0;
    private javax.swing.JRadioButton rbtnSinExistencia;
    private javax.swing.JTable tblDataPrecios;
    private javax.swing.JTextField txtBase;
    private javax.swing.JTextField txtCantidadInicial;
    private javax.swing.JTextField txtCantidadMinima;
    public static javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtCostoPrecio;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDineroVendedor;
    private com.toedter.calendar.JDateChooser txtFechaCaducidad;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtIvaActual;
    private javax.swing.JTextField txtPorcentajeVendedor;
    private javax.swing.JTextField txtPvp;
    private javax.swing.JTextField txtUtilidad;
    private javax.swing.JTextField txtUtilidadPorcentaje;
    // End of variables declaration//GEN-END:variables

   
}
